#!/bin/sh

## PS1 configuration
# get current branch in git repo
parse_git_branch () {
    BRANCH=$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')
    if [ ! "${BRANCH}" = "" ]
    then
        STAT=$(parse_git_dirty)
        echo " (${BRANCH}${STAT})"
    else
        echo ""
    fi
}

# get current status of git repo
parse_git_dirty () {
    status=$(git status 2>&1 | tee)
    dirty=$(printf "%s" "${status}" 2> /dev/null | grep "modified:" >/dev/null 2>&1; echo "$?")
    untracked=$(printf "%s" "${status}" 2> /dev/null | grep "Untracked files" >/dev/null 2>&1; echo "$?")
    ahead=$(printf "%s" "${status}" 2> /dev/null | grep "Your branch is ahead of" >/dev/null 2>&1; echo "$?")
    newfile=$(printf "%s" "${status}" 2> /dev/null | grep "new file:" >/dev/null 2>&1; echo "$?")
    renamed=$(printf "%s" "${status}" 2> /dev/null | grep "renamed:" >/dev/null 2>&1; echo "$?")
    deleted=$(printf "%s" "${status}" 2> /dev/null | grep "deleted:" >/dev/null 2>&1; echo "$?")
    bits=''
    if [ "${renamed}" = "0" ]; then
        bits=">${bits}"
    fi
    if [ "${ahead}" = "0" ]; then
        bits="*${bits}"
    fi
    if [ "${newfile}" = "0" ]; then
        bits="+${bits}"
    fi
    if [ "${untracked}" = "0" ]; then
        bits="?${bits}"
    fi
    if [ "${deleted}" = "0" ]; then
        bits="x${bits}"
    fi
    if [ "${dirty}" = "0" ]; then
        bits="!${bits}"
    fi
    if [ ! "${bits}" = "" ]; then
        echo " ${bits}"
    else
        echo ""
    fi
}

if hash git >/dev/null 2>&1; then
    export PS1='$(whoami)@$(hostname):${PWD/$HOME/\~}$(parse_git_branch) \\$ '
else
    export PS1='$(whoami)@$(hostname):${PWD/$HOME/\~} \\$ '
fi

